'''
Link to original problem:
https://leetcode.com/problems/multiply-strings/
'''

'''
The challenge asks you to ***not cast any strings to int*** and thus you have to construct your own
multiplication and addition operators from scratch.  
We do this by constructing a basic multiplication table and addition table for 0:9 
Multiplication and addition are done by in the same process as they are done by hand, 
and represented in an array with indicies representing powers of 10.  
'''

class Solution:
    def multiply(self, num1: str, num2: str) -> str:
        if num1 == '0' or num2 == '0':
            return '0'
        
        xtable = {
'0':{'0':'0','1':'0','2':'0','3':'0','4':'0','5':'0','6':'0','7':'0','8':'0','9':'0'},
'1':{'0':'0','1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9'}, 
'2':{'0':'0','1':'2','2':'4','3':'6','4':'8','5':'10','6':'12','7':'14','8':'16','9':'18'},
'3':{'0':'0','1':'3','2':'6','3':'9','4':'12','5':'15','6':'18','7':'21','8':'24','9':'27'},
'4':{'0':'0','1':'4','2':'8','3':'12','4':'16','5':'20','6':'24','7':'28','8':'32','9':'36'},
'5':{'0':'0','1':'5','2':'10','3':'15','4':'20','5':'25','6':'30','7':'35','8':'40','9':'45'},
'6':{'0':'0','1':'6','2':'12','3':'18','4':'24','5':'30','6':'36','7':'42','8':'48','9':'54'},
'7':{'0':'0','1':'7','2':'14','3':'21','4':'28','5':'35','6':'42','7':'49','8':'56','9':'63'},
'8':{'0':'0','1':'8','2':'16','3':'24','4':'32','5':'40','6':'48','7':'56','8':'64','9':'72'},
'9':{'0':'0','1':'9','2':'18','3':'27','4':'36','5':'45','6':'54','7':'63','8':'72','9':'81'}}
        
        stable = {
'0':{'0':'0','1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9'},
'1':{'0':'1','1':'2','2':'3','3':'4','4':'5','5':'6','6':'7','7':'8','8':'9','9':'10'}, 
'2':{'0':'2','1':'3','2':'4','3':'5','4':'6','5':'7','6':'8','7':'9','8':'10','9':'11'},
'3':{'0':'3','1':'4','2':'5','3':'6','4':'7','5':'8','6':'9','7':'10','8':'11','9':'12'},
'4':{'0':'4','1':'5','2':'6','3':'7','4':'8','5':'9','6':'10','7':'11','8':'12','9':'13'},
'5':{'0':'5','1':'6','2':'7','3':'8','4':'9','5':'10','6':'11','7':'12','8':'13','9':'14'},
'6':{'0':'6','1':'7','2':'8','3':'9','4':'10','5':'11','6':'12','7':'13','8':'14','9':'15'},
'7':{'0':'7','1':'8','2':'9','3':'10','4':'11','5':'12','6':'13','7':'14','8':'15','9':'16'},
'8':{'0':'8','1':'9','2':'10','3':'11','4':'12','5':'13','6':'14','7':'15','8':'16','9':'17'},
'9':{'0':'9','1':'10','2':'11','3':'12','4':'13','5':'14','6':'15','7':'16','8':'17','9':'18'}}
        
        psum=[[] for x in range(len(num1)+len(num2))]
        for i in range(1,len(num1)+1):
            for j in range(1,len(num2)+1):
                p = xtable[num1[-i]][num2[-j]]
                if len(p) == 2:
                    psum[i+j-2].append(p[1])
                    psum[i+j-1].append(p[0])
                else:
                    psum[i+j-2].append(p)
        for x in range(len(psum)):
            if len(psum[x]) == 1:
                psum[x] = psum[x][0]
                continue
            else:
                d = '0'
                for y in range(len(psum[x])):
                    d = stable[psum[x][y]][d]
                    if len(d) == 2:
                        psum[x+1].append('1')
                        d = d[1]
                psum[x] = d  
                    
        if psum[-1] == '0':
            psum = psum[:-1]
        psum = psum[::-1]
        return ''.join(psum)
