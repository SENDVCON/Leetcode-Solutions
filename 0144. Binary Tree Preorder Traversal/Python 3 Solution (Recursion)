'''
Link to original problem:
https://leetcode.com/problems/binary-tree-preorder-traversal/

Given the root of a binary tree, return the preorder traversal of its nodes' values.
'''

'''
Note: "Preorder" means you traverse the root node, then the left child then the right child.
'''

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        preorder = []
        
        def traverse(node):
            preorder.append(node.val)
            
            if node.left:
                traverse(node.left)
            
            if node.right:
                traverse(node.right)
                
        if root:
            traverse(root)
        
        return preorder
